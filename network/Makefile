
#help for make
#http://www.cnblogs.com/wang_yb/p/3990952.html
#https://segmentfault.com/a/1190000000349917
#http://blog.csdn.net/cuiyifang/article/details/7910268

#to use gprof to analyse efficience of the program:
#http://blog.chinaunix.net/uid-25194149-id-3215487.html
#to use doxygen+graphviz+htmlhelp to generate document from source code:
#http://www.doxygen.nl/
#(also include good comments norm)
#http://blog.csdn.net/u010740725/article/details/51387810

#TODO:the dependences are not complete!

#compile parameters

CC = g++
MPICC = mpicxx


#the optimazition level of gcc/g++
#http://blog.csdn.net/hit_090420216/article/details/44900215
#NOTICE: -O2 is recommended, while -O3 is dangerous
#when developing, not use -O because it will disturb the normal 
#routine. use it for test and release.
CFLAGS = -c -Wall -g #-pg #-O2

CFLAGS += -DNO_THREAD
#CFLAGS += -DDEBUG_TRACK
#CFLAGS += -DMAIN_LOG
#CFLAGS += -DSTD_TRACK
#CFLAGS += -DSTD_MAIN
CFLAGS += -DQUERYSTR
CFLAGS += -DPTR_MATCH
CFLAGS += -DSPAN
#CFLAGS += -DI_AND_D
#CFLAGS += -DTUPLE
#CFLAGS += -DUNCOMP
#CFLAGS += -DCOLORING
#CFLAGS += -DREDCC
#CFLAGS += -DGLOBAL_COMMENT
#CFLAGS += -DSPACE_LOG
#CFLAGS += -DWHOLE_STR
#CFLAGS += -DALL_I
#CFLAGS += -DINVALID_READ
#CFLAGS += -DCYCLE_TRACK
#CFLAGS += -DSELECTIVE



EXEFLAG = -g -O2 #-pg #-O2
LDFLAG = -pthread

# paths

homedir =  timingsubg/

networkdir = $(homedir)network/
timingdir = $(homedir)timing/
msforestdir = $(homedir)msforest/
utildir = $(homedir)util/
gstreamdir = $(homedir)gstream/

sjtreedir = $(homedir)sjtree/

vf2dir = $(homedir)vf2/

objdir = $(networkdir).objs/

exedir = $(networkdir)bin/

# objects

netsubgobj = $(objdir)netstream.o $(objdir)netdedge.o $(objdir)netqedge.o $(objdir)netquery.o

timingobj = $(objdir)timingsubg.o $(objdir)timingconf.o $(objdir)query.o $(objdir)edge.o

msforestobj = $(objdir)msforest.o $(objdir)tenode.o $(objdir)msnode.o $(objdir)nodeop.o $(objdir)lockreq.o

gstreamobj = $(objdir)gstream.o

matchobj = $(objdir)match.o

gtransactionobj = $(objdir)gtransaction.o

utilobj = $(objdir)util.o $(objdir)runtime.o

sjtreeobj = $(objdir)sjtreesubg.o $(objdir)sjtree.o $(objdir)sjnode.o

vf2obj = $(objdir)vf2subg.o $(objdir)vf2.o $(objdir)redcc.o $(objdir)vmatch.o


objfile = $(netsubgobj) $(timingobj) $(sjtreeobj) $(vf2obj) $(msforestobj) $(gstreamobj) $(matchobj) $(gtransactionobj) $(utilobj)
	 

def64IO = -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE

all: tinet sjnet vf2net 
	# vf2colornet

#netsubg
tinet: $(objdir)timain.o $(objfile)
	$(CC) $(EXEFLAG) ${LDFLAG} -o $(exedir)tinet $(objdir)timain.o $(objfile)

#sjtree
sjnet: $(objdir)sjmain.o $(objfile)
	$(CC) $(EXEFLAG) $(LDFLAG) -o $(exedir)sjnet $(objdir)sjmain.o $(objfile)

vf2net: $(objdir)vf2main.o $(objfile)
	$(CC) $(EXEFLAG) $(LDFLAG) -o $(exedir)vf2net $(objdir)vf2main.o $(objfile)

#vf2colornet: $(objdir)vf2main.o $(objfile)
#	$(CC) $(EXEFLAG) $(LDFLAG) -o $(exedir)vf2colornet $(objdir)vf2main.o $(objfile)

#<obj:network>

$(objdir)timain.o: $(networkdir)timing_network.cpp 
	$(CC) $(CFLAGS) $(networkdir)timing_network.cpp -o $(objdir)timain.o 

$(objdir)sjmain.o: $(networkdir)sjtree_network.cpp 
	$(CC) $(CFLAGS) $(networkdir)sjtree_network.cpp -o $(objdir)sjmain.o 

$(objdir)vf2main.o: $(networkdir)vf2_network.cpp 
	$(CC) $(CFLAGS) $(networkdir)vf2_network.cpp -o $(objdir)vf2main.o 

$(objdir)netstream.o: $(networkdir)netstream.cpp $(networkdir)netstream.h 
	$(CC) $(CFLAGS) $(networkdir)netstream.cpp -o $(objdir)netstream.o

$(objdir)netquery.o: $(networkdir)netquery.cpp $(networkdir)netquery.h
	$(CC) $(CFLAGS) $(networkdir)netquery.cpp -o $(objdir)netquery.o

$(objdir)netqedge.o: $(networkdir)NetQedge.cpp $(networkdir)NetQedge.h 
	$(CC) $(CFLAGS) $(networkdir)NetQedge.cpp -o $(objdir)netqedge.o

$(objdir)netdedge.o: $(networkdir)NetDedge.cpp $(networkdir)NetDedge.h 
	$(CC) $(CFLAGS) $(networkdir)NetDedge.cpp -o $(objdir)netdedge.o

#</obj:network>

#<obj:timing>

$(objdir)timingsubg.o: $(timingdir)timingsubg.cpp $(timingdir)timingsubg.h 
	$(CC) $(CFLAGS) $(timingdir)timingsubg.cpp -o $(objdir)timingsubg.o 

$(objdir)timingconf.o: $(timingdir)timingconf.cpp $(timingdir)timingconf.h 
	$(CC) $(CFLAGS) $(timingdir)timingconf.cpp -o $(objdir)timingconf.o

$(objdir)query.o: $(timingdir)query.cpp $(timingdir)query.h 
	$(CC) $(CFLAGS) $(timingdir)query.cpp -o $(objdir)query.o

$(objdir)gtransaction.o: $(timingdir)gtransaction.h $(timingdir)gtransaction.cpp 
	$(CC) $(CFLAGS) $(timingdir)gtransaction.cpp -o $(objdir)gtransaction.o

$(objdir)match.o: $(timingdir)match.cpp $(timingdir)match.h
	$(CC) $(CFLAGS) $(timingdir)match.cpp -o $(objdir)match.o

$(objdir)edge.o: $(timingdir)edge.cpp $(timingdir)edge.h
	$(CC) $(CFLAGS) $(timingdir)edge.cpp -o $(objdir)edge.o

#</obj:timing>

#<obj:sjtree>
$(objdir)sjtreesubg.o: $(sjtreedir)sjtreesubg.cpp $(sjtreedir)sjtreesubg.h
	$(CC) $(CFLAGS) $(sjtreedir)sjtreesubg.cpp -o $(objdir)sjtreesubg.o

$(objdir)sjtree.o: $(sjtreedir)sjtree.cpp $(sjtreedir)sjtree.h
	$(CC) $(CFLAGS) $(sjtreedir)sjtree.cpp -o $(objdir)sjtree.o

$(objdir)sjnode.o: $(sjtreedir)sjNode.cpp $(sjtreedir)sjNode.h
	$(CC) $(CFLAGS) $(sjtreedir)sjNode.cpp -o $(objdir)sjnode.o
#</obj:sjtree>


#<obj:vf2>
$(objdir)vf2subg.o: $(vf2dir)vf2subg.cpp $(vf2dir)vf2subg.h
	$(CC) $(CFLAGS) $(vf2dir)vf2subg.cpp -o $(objdir)vf2subg.o

$(objdir)vf2.o: $(vf2dir)vf2.cpp $(vf2dir)vf2.h
	$(CC) $(CFLAGS) $(vf2dir)vf2.cpp -o $(objdir)vf2.o

$(objdir)redcc.o: $(vf2dir)redCC.cpp $(vf2dir)redCC.h
	$(CC) $(CFLAGS) $(vf2dir)redCC.cpp -o $(objdir)redcc.o

$(objdir)vmatch.o: $(vf2dir)Vmatch.cpp $(vf2dir)Vmatch.h
	$(CC) $(CFLAGS) $(vf2dir)Vmatch.cpp -o $(objdir)vmatch.o
#</obj:vf2>


#<obj:msforest>

$(objdir)msforest.o: $(msforestdir)msforest.cpp $(msforestdir)msforest.h 
	$(CC) $(CFLAGS) $(msforestdir)msforest.cpp -o $(objdir)msforest.o

$(objdir)tenode.o: $(msforestdir)teNode.cpp $(msforestdir)teNode.h 
	$(CC) $(CFLAGS) $(msforestdir)teNode.cpp -o $(objdir)tenode.o

$(objdir)msnode.o: $(msforestdir)msNode.cpp $(msforestdir)msNode.h 
	$(CC) $(CFLAGS) $(msforestdir)msNode.cpp -o $(objdir)msnode.o

$(objdir)nodeop.o: $(msforestdir)nodeOP.cpp $(msforestdir)nodeOP.h 
	$(CC) $(CFLAGS)  $(msforestdir)nodeOP.cpp -o $(objdir)nodeop.o

$(objdir)lockreq.o: $(msforestdir)lockReq.cpp $(msforestdir)lockReq.h 
	$(CC) $(CFLAGS) $(msforestdir)lockReq.cpp -o $(objdir)lockreq.o

#</obj:msforest>

#<obj:gstream>

$(objdir)gstream.o: $(gstreamdir)gstream.h $(gstreamdir)gstream.cpp 
	$(CC) $(CFLAGS) $(gstreamdir)gstream.cpp -o $(objdir)gstream.o

#</obj:gstream>

#<obj:other>

$(objdir)util.o: $(utildir)util.h $(utildir)util.cpp $(utildir)list_T.h
	$(CC) $(CFLAGS) $(utildir)util.cpp -o $(objdir)util.o

#$(objdir)list.o:  $(utildir)list_T.h 
#	$(CC) $(CFLAGS) $(utildir)list_T.h -o $(objdir)list.o

$(objdir)runtime.o:  $(utildir)runtime.h $(utildir)runtime.cpp
	$(CC) $(CFLAGS) $(utildir)runtime.cpp -o $(objdir)runtime.o

#</obj:other>

clean:
	rm -rf $(exedir)* $(objdir)*.o
	#rm -rf .project .cproject .settings   just for eclipse
	#rm -rf cscope* just for vim


